name: CI/CD - Manual Version Tag and Release
on:
  push:
    branches:
      - main # Or your production branch, e.g., production
permissions:
  contents: write # To create tags and releases
jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.versioner.outputs.new_version }}
      image_uri: ${{ steps.build-image.outputs.metadata }} # Output for potential downstream jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags and commit history
      - name: Bump version and push tag
        id: versioner
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkit: true
      - name: Get Tags for Image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: "registry_name/image_name"
          tags: |
            type=raw,value=${{ steps.versioner.outputs.new_tag }}
            type=semver,pattern={{version}}
            type=raw,value=latest
      - name: Build, tag, and push Docker image to Amazon ECR
        uses: docker/build-push-action@v6
        id: build-image
        with:
          context: .
          file: Dockerfile
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          tags: ${{ steps.metadata.outputs.tags }}
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versioner.outputs.new_tag }}
          release_name: Release ${{ steps.versioner.outputs.new_tag }}
          body: |
            Released version ${{ steps.versioner.outputs.new_tag }}

            **Changes:**
            ${{ steps.versioner.outputs.changelog }}

            **Docker Image:**
            `${{ steps.build-image.outputs.metadata }}`
            `${{ steps.metadata.outputs.tags }}`
            `${{ steps.metadata.outputs.json }}`
          draft: true
