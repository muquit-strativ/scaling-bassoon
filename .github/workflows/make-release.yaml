name: Multi-Env Release Pipeline
on:
  push:
    branches:
      - development
      - staging
      - production
permissions:
  contents: write # To create tags and releases
jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.set.outputs.branch }}
    steps:
      - id: set
        run: echo "branch=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
  development:
    if: needs.set-env.outputs.branch == 'development'
    needs: set-env
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versioner.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags and commit history
      - name: Bump version and push tag
        id: versioner
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # pre_release_branches: development
          append_to_pre_release_tag: dev
          default_bump: prerelease
          prerelease: true
          # custom_release_rules: feat:custom,fix:custom
  staging:
    if: needs.set-env.outputs.branch == 'staging'
    needs: set-env
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tagger.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags and commit history
      - id: version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
      - name: Generate beta tag
        id: tagger
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git fetch --tags
          PREFIX="v$VERSION-beta"
          COUNT=$(git tag | grep "^$PREFIX" | sed -E "s/^$PREFIX([0-9]+)$/\1/" | sort -n | tail -n1)
          NEXT=$((COUNT + 1))
          TAG="$PREFIX$NEXT"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG
          git push origin $TAG
          echo "tag=$TAG" >> $GITHUB_OUTPUT
  production:
    if: needs.set-env.outputs.branch == 'production'
    needs: set-env
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versioner.outputs.new_tag }}
      changelog: ${{ steps.versioner.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to get all tags and commit history
      - name: Auto-tag production
        id: versioner
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  release:
    needs: [development, staging, production]
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.development.result == 'success' || needs.staging.result == 'success' || needs.production.result == 'success') }}
    steps:
      - name: Determine tag
        id: get_tag
        run: |
          TAG="${{ needs.production.outputs.tag || needs.staging.outputs.tag || needs.development.outputs.tag }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          prerelease: ${{ contains(steps.get_tag.outputs.tag, '-dev') || contains(steps.get_tag.outputs.tag, '-beta') }}
